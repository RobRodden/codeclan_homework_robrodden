---
title: "R Notebook"
output: html_notebook
---

```{r}
library(tidyverse)
library(CodeClanData)
```

```{r}
students
```

```{r}
all_deaths
```
```{r}
nrow(all_deaths)
ncol(all_deaths)

dim(all_deaths)
```

```{r}
head(all_deaths)
```

```{r}
head(all_deaths, 10)
```

```{r}
tail(all_deaths, 6)
```

```{r}
summary(all_deaths)
```

```{r}
glimpse(all_deaths)
```

```{r}
summary(all_deaths)
```

```{r}
str(all_deaths)
```

```{r}
view(all_deaths)
```

```{r}
test <- all_deaths
```

```{r}
select(all_deaths,name, allegiances, gender, nobility, year_of_death)
```

```{r}
deaths_no_name <- select(all_deaths, -name)
```

```{r}
names(all_deaths)
```

```{r}
select(all_deaths, book_of_death, death_chapter, book_intro_chapter, book1_GoT, book2_CoK, book3_SoS, book4_FfC, book5_DwD)
```

```{r}
columns_relating_to_book <- select(all_deaths, contains("book"))
columns_relating_to_book
```

```{r}
all_deaths
```

```{r}
filter(all_deaths, allegiances == "Lannister")
```

```{r}
filter(all_deaths, allegiances != "Lannister")
```

```{r}
filter(all_deaths, allegiances %in% c("Lannister", "House Lannister))
```

```{r}
filter(all_deaths, year_of_death >= 299)
```

```{r}
filter(all_deaths, allegiances == "None")
```

```{r}
select(all_deaths, contains ("book"),
       contains ("death"))
```

& and
| or
```{r}
filter(all_deaths, allegiances == "Lannister" & nobility == 1)
```

```{r}
filter(all_deaths, allegiances == "Lannister" | allegiances == "House Stark")
```

```{r}
filter(all_deaths,
       allegiances %in% c("Lannister", "House Stark"))
```

```{r}
filter(all_deaths,
       allegiances == "Lannister" | nobility == 1)
```

```{r}
filter(all_deaths,
       book_intro_chapter>= 5 & book_intro_chapter <= 10)
```

```{r}
filter(all_deaths, between(book_intro_chapter, 5, 10))
```

```{r}
filter(all_deaths, str_detect(allegiances, "Lannister"))
```

```{r}
filter(all_deaths, year_of_death <= 299)
```

```{r}
filter(all_deaths, 
       gender == 0 & allegiances != "Lannister")
```

```{r}
filter(all_deaths, name %in% c("Jon Snow", "Daenerys Targaryen", "Samwell Tarly"))
```

```{r}
arrange(all_deaths, book_intro_chapter)
```

```{r}
arrange(all_deaths, desc(book_intro_chapter))
```

```{r}
arrange(all_deaths, book_of_death)
```

```{r}
arrange(all_deaths, book_of_death, death_chapter)
```

```{r}
arrange(all_deaths, allegiances)
```

```{r}
arrange(all_deaths, allegiances, book_intro_chapter)
```

```{r}
arrange(all_deaths, desc(year_of_death))
```

```{r}
mutate(all_deaths, years_survived = year_of_death - 298)
```

```{r}
mutate(all_deaths, 
       years_survived = year_of_death - 298,
       .after = year_of_death)
```

```{r}
mutate(all_deaths,
       book_of_death * 5)
```

mutate(all_deaths,
       test = book_of_death * 5)
       ```{r}
mutate(all_deaths,
       test = book_of_death * 5)
```
```{r}
mutate(all_deaths,
       test = book_of_death * 5)
```

```{r}
mutate(all_deaths,
       year_of_death = is.na(year_of_death))
```

```{r}
mutate(all_deaths,
       nobility = as.logical(nobility))
```

```{r}
mutate(all_deaths,
       name = as.numeric(name))
```
```{r}
mutate(all_deaths,
       avg = mean(year_of_death, na.rm = TRUE))
```
```{r}
summarise(all_deaths,
          avg_death = mean(year_of_death, na.rm = T))
```
```{r}
summarise(all_deaths,
          avg_death = mean(year_of_death, na.rm = T),
          sum_males = sum(gender))
```
```{r}
group_by(all_deaths, allegiances)
```

```{r}
summarise(deaths_grouped,
          character_count = n())
```

```{r}
deaths_grouped <- group_by(all_deaths, nobility, gender)
```

```{r}
summarise(deaths_grouped,
          char_count = n())
```

%>% shift + command + m
```{r}
have_died <- filter(all_deaths, !is.na(book_of_death))
```

```{r}
all_deaths %>% 
  filter(!is.na(book_of_death)) %>% 
  group_by(allegiances) %>% 
  summarise(count = n()) %>% 
  arrange(desc(count))
```

```{r}
robtest <- summarise(all_deaths,
          count = n()) %>% 
  pull()
```
```{r}
have_died <- filter(all_deaths, !is.na(book_of_death)) 

died_grouped <- group_by(have_died, allegiances)
died_counts <- summarise(died_grouped, count = n())

arrange(died_counts, desc(count))
```

```{r}
summarise(drinks_content)
```
```{r}

```

```{r}
drinks_content
```

```{r}
dim(drinks_content)
summary(drinks_content)
head(drinks_content)
tail(drinks_content)
nrow(drinks_content)
names(drinks_content)
glimpse(drinks_content)
```
```{r}
glimpse(drinks_content)
```

```{r}
select(drinks_content, Beverage_category, Beverage, Beverage_prep, Calories)
```


```{r}
Inc_Cal_Diff <- mutate(drinks_content, 
       Calorie_diff = Calories - 135,
       .after = Calories)
```

```{r}
select(Inc_Cal_Diff, Beverage_category, Beverage_prep, Calories, Calorie_diff)
```


```{r}
Inc_Cal_Diff[Inc_Cal_Diff < 0] <- 0
```

```{r}
select(Inc_Cal_Diff, Beverage_category, Beverage, Beverage_prep, Calories, Calorie_diff)
```

```{r}
unique(Inc_Cal_Diff[c("Beverage_category")])
just_coffee <- filter(drinks_content, Beverage_category == "Coffee")
just_CED <- filter(drinks_content, Beverage_category == "Classic Espresso Drinks")
just_SED <- filter(drinks_content, Beverage_category == "Signature Espresso Drinks")
just_TTD <- filter(drinks_content, Beverage_category == "Tazo® Tea Drinks")
just_SIB <- filter(drinks_content, Beverage_category == "Shaken Iced Beverages")
just_Smootihies <- filter(drinks_content, Beverage_category == "Smoothies")
just_FBC <- filter(drinks_content, Beverage_category == "Frappuccino® Blended Coffee")
just_FLBC <- filter(drinks_content, Beverage_category == "Frappuccino® Light Blended Coffee")
just_FBCr <- filter(drinks_content, Beverage_category == "Frappuccino® Blended Crème")

Mean_just_coffee <- summarise(just_coffee,
          avg_coffee_cal = mean(Calories, na.rm = T))
Mean_just_CED <- summarise(just_CED,
          avg_CED = mean(Calories, na.rm = T))
Mean_just_SED <- summarise(just_SED,
          avg_SED_cal = mean(Calories, na.rm = T))
Mean_just_TTD <- summarise(just_TTD,
          avg_TTD_cal = mean(Calories, na.rm = T))
Mean_just_SIB <- summarise(just_SIB,
          avg_SIB = mean(Calories, na.rm = T))
Mean_just_Smoothies <- summarise(just_Smootihies,
          avg_Smoothies_cal = mean(Calories, na.rm = T))
Mean_just_FBC <- summarise(just_FBC,
          avg_FBC_cal = mean(Calories, na.rm = T))
Mean_just_FLBC <- summarise(just_FLBC,
          avg_FLBC = mean(Calories, na.rm = T))
Mean_just_FBCr <- summarise(just_FBCr,
          avg_FBCr_cal = mean(Calories, na.rm = T))
BevCatComb <- c(Mean_just_coffee, Mean_just_CED, Mean_just_SED, Mean_just_TTD, Mean_just_SIB, Mean_just_Smoothies, Mean_just_FBC, Mean_just_FLBC, Mean_just_FBCr)
BevCatComb
```

```{r}
drinks_content %>% 
  filter(!is.na(Beverage_category)) %>% 
  group_by(Beverage_category) %>% 
  summarise(Calories = mean(Calories)) %>% 
  arrange(desc(Calories))
```

```{r}
drinks_content %>% 
  filter(!is.na(Beverage_prep)) %>% 
  group_by(Beverage_prep) %>% 
  summarise(Calories = mean(Calories)) %>% 
  arrange(desc(Calories))
```

```{r}
drinks_content %>% 
  filter(!is.na(Calories)) %>%
  filter(Calories > 282.2222) %>% 
  group_by(Beverage_prep) %>% 
  summarise(Calories = mean(Calories)) %>% 
  arrange(desc(Calories))
```

```{r}
drinks_content %>% 
  filter(!is.na(Calories)) %>%
  filter(Calories > 282.2222) %>% 
  group_by(Beverage_prep, Beverage_category, Beverage) %>% 
  summarise(Calories = mean(Calories)) %>% 
  arrange(desc(Calories))
```

